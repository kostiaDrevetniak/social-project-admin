import React, { useState } from "react";
import { useForm } from "react-hook-form";
import TextField from "../components/TextField";
import TextArea from "../components/TextArea";
import CategorySelector from "../components/CategorySelector";

function ValidationForm() {
  const [lable, setLable] = useState("–î–µ–Ω—å –∫–∞—Ä'—î—Ä–∏");
  const [text, setText] = useState(
    "–ù–∞—Å—Ç–∞–≤ —á–∞—Å –∑–Ω–∞–π—Ç–∏ —Å–æ–±—ñ —Ä–æ–±–æ—Ç—É! \n\n" +
      "–Ü –ú–æ–ª–æ–¥—ñ–∂–Ω–∏–π –¶–µ–Ω—Ç—Ä –º–æ–∂–µ –≤–∞–º –∑ —Ü–∏–º –¥–æ–ø–æ–º–æ–≥—Ç–∏, –∞–¥–∂–µ –∑–æ–≤—Å—ñ–º —Å–∫–æ—Ä–æ –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è –î–µ–Ω—å –ö–∞—Ä'—î—Ä–∏!\n\n" +
      "–ß–æ–≥–æ –æ—á—ñ–∫—É–≤–∞—Ç–∏ –≤—ñ–¥ –∑–∞—Ö–æ–¥—É?\n\n" +
      "üî∏–º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è –∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏—Ö –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤ \n" +
      "üî∏–ª–µ–∫—Ü—ñ—ó –≤—ñ–¥ —Å–ø—ñ–∫–µ—Ä—ñ–≤, —á–∏—ó —ñ–º–µ–Ω–∞ –º–∏ –Ω–µ–∑–∞–±–∞—Ä–æ–º –ø–æ–≤—ñ–¥–æ–º–∏–º–æ \n" +
      "üî∏–ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —á–∞—Å—É –≤ –∫–æ–ª—ñ –æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤ \n\n" +
      "üìÖ 27 –∫–≤—ñ—Ç–Ω—è, 14:00\n" +
      'üìç–£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –¥—ñ–º "–ü–µ—Ä–µ–º–æ–≥–∞"\n\n' +
      "–í—Ö—ñ–¥ –≤—ñ–ª—å–Ω–∏–π\n\n" +
      "–û–±–æ–≤'—è–∑–∫–æ–≤–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è‚ùóÔ∏è\n\n" +
      "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ–æ—Ä–º—Éüëáüèª\n" +
      "https://cutt.ly/a4Huoe6\n\n" +
      "#–î–ö2023"
  );

  const [categories, setCategories] = useState([
    { value: "—Ä–æ–±–æ—Ç–∞", label: "–†–æ–±–æ—Ç–∞" },
    { value: "–Ω–∞–≤—á–∞–Ω–Ω—è", label: "–ù–∞–≤—á–∞–Ω–Ω—è" },
    { value: "–æ–±–º—ñ–Ω", label: "–û–±–º—ñ–Ω" },
    { value: "–ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞", label: "–õ—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞" },
    { value: "—Ä–æ–∑–≤–∞–≥–∏", label: "–†–æ–∑–≤–∞–≥–∏" },
  ]);

  const { register, handleSubmit, reset, control } = useForm({
    defaultValues: {
      lable: lable,
      text: text,
      categories: [],
    },
  });

  function onSubmit(data) {
    console.log(data);
    reset();
  }

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <TextField lable="–ó–∞–≥–æ–ª–æ–≤–æ–∫" {...register("lable")} />
      <TextArea
        lable="–¢–µ–∫—Å—Ç –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è"
        rows="40"
        cols="70"
        {...register("text")}
      />
      <CategorySelector
        categories={categories}
        {...register("categories")}
        control={control}
      />
      <input type="submit" value="–ó–∞–ø–∏—Å–∞—Ç–∏" />
    </form>
  );
}

export default ValidationForm;
